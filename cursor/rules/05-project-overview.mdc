---
description: High-level project context, goals, and target platform
alwaysApply: false
version: 0.3.0
---

## Use when
- Onboarding to the geckoforge project
- Planning new features or major changes
- Explaining project goals to collaborators
- Making architectural decisions

## Project Identity

**Name**: geckoforge  
**Type**: KIWI NG image builder for openSUSE Leap 15.6  
**Purpose**: Reproducible, production-grade KDE Plasma development workstation  
**Target Hardware**: NVIDIA GPU workstations/laptops (130GB RAM, AMD Ryzen typical)

## Core Philosophy

### "Configure Once, Avoid BS Forever"
- Create highly reliable, reusable template
- Everything in code (Nix, KIWI, scripts)
- No more wasting time configuring systems
- Reproducible across multiple NVIDIA devices

### Why This Exists
**Problem**: Tired of configuring Linux systems from scratch  
**Solution**: Automated ISO builder with 4-layer architecture  
**Benefit**: Reproducible development environment, instant rollbacks

## Technology Stack

### Base System (Layer 1: ISO)
- **OS**: openSUSE Leap 15.6 (stable, 18-month release cycle)
- **Desktop**: KDE Plasma 5
- **Filesystem**: Btrfs with Snapper (instant snapshots)
- **Security**: LUKS2 encryption, Secure Boot compatible
- **Boot**: UEFI only

### Package Management (Multi-Layer)
- **zypper**: System packages (kernel, drivers, KDE)
- **Nix + Home-Manager**: User packages (dev tools, CLI)
- **Flatpak**: GUI applications (sandboxed)
- **PWA**: Web-first services (Claude, Teams)

### Container Runtime (Layer 3: User Setup)
- **Docker**: Container runtime (NO Podman)
- **NVIDIA Container Toolkit**: GPU acceleration in containers
- **Compose**: Multi-container orchestration

### Development Stack (Layer 4: Home-Manager)
- **Languages**: TypeScript, Go, Python, Nim, C#, R, Elixir
- **TeX**: LaTeX via TeX Live scheme-medium (2GB, stable)
- **Elixir**: Erlang 28.1 + Elixir 1.18.4 + Phoenix via asdf
- **Browser**: Chromium (privacy-hardened, Manifest V2 extensions)

## Architecture Overview

### Four Layers (Non-Negotiable)
```
┌─────────────────────────────────────┐
│ Layer 4: Home-Manager (Nix)        │
│ User packages, dev environments    │
└─────────────────────────────────────┘
              ↑
┌─────────────────────────────────────┐
│ Layer 3: User Setup (scripts/)     │
│ Docker, NVIDIA Toolkit, Flatpaks   │
└─────────────────────────────────────┘
              ↑
┌─────────────────────────────────────┐
│ Layer 2: First-Boot (systemd)      │
│ NVIDIA driver, Nix installation    │
└─────────────────────────────────────┘
              ↑
┌─────────────────────────────────────┐
│ Layer 1: ISO (KIWI profile)        │
│ Base system, repos, KDE, Snapper   │
└─────────────────────────────────────┘
```

**See**: `10-kiwi-architecture.mdc` for detailed layer responsibilities

## Key Differentiators

### vs. NixOS
- ✅ Stable openSUSE Leap base (enterprise support)
- ✅ Familiar package management (zypper)
- ✅ Better NVIDIA driver integration
- ✅ Professional KDE experience

### vs. Ubuntu/Fedora
- ✅ Reproducible via Nix
- ✅ Instant rollbacks (Btrfs + Snapper)
- ✅ Declarative configuration
- ✅ Automated ISO rebuilds

### vs. Windows 10
- ✅ No licensing costs
- ✅ Better development tooling
- ✅ Native Docker/containers
- ✅ GPU compute without WSL2 overhead

## Use Case

**Primary**: Replace Windows 10 on powerful workstation  
**Secondary**: Deploy to NVIDIA laptops  
**Workflow**:
- AI/ML development (PyTorch, TensorFlow, CUDA)
- Software engineering (TypeScript, Go, Python, Elixir)
- Content creation (OBS with NVENC, Kdenlive)
- Daily driver (web, email, meetings, documents)

## Success Metrics

### Technical
- ✅ ISO builds in <15 minutes
- ✅ Installation completes in <30 minutes
- ✅ First-boot automation completes in <10 minutes
- ✅ User setup completes in <20 minutes
- ✅ System responsive on modern hardware

### User Experience
- ✅ No configuration required after initial setup
- ✅ GPU acceleration works out of box
- ✅ Multi-day uptime without issues
- ✅ Easy rollback on failures

### Reproducibility
- ✅ Identical environments across devices
- ✅ New ISO monthly with security updates
- ✅ Configuration tracked in Git
- ✅ Rollbacks via Snapper + Nix generations

## Critical Design Decisions

### Docker over Podman
**Rationale**: User preference, simpler NVIDIA integration, no runtime confusion  
**Impact**: All container scripts use Docker syntax (`--gpus all`)

### TeX scheme-medium over scheme-full
**Rationale**: User requirement, stability on openSUSE Leap, 3GB disk savings  
**Impact**: Sufficient for most use cases, easy upgrade path if needed

### Chromium over Chrome
**Rationale**: Privacy, manifest V2 extension support, uBlock Origin compatibility  
**Impact**: Better ad blocking, no Google tracking

### Elixir via asdf (not Nix)
**Rationale**: Better version management, official Erlang builds  
**Impact**: Requires manual setup after Home-Manager switch

## Repository Structure

```
geckoforge/
├── profiles/leap-15.6/kde-nvidia/  # KIWI profile
│   ├── config.kiwi.xml             # Package lists, repos
│   ├── root/                       # File overlays
│   └── scripts/                    # First-boot scripts
├── home/                           # Home-Manager config
│   ├── flake.nix
│   ├── home.nix
│   └── modules/                    # Modular configs
├── scripts/                        # User setup scripts
│   ├── firstrun-user.sh            # Main wizard
│   ├── setup-docker.sh
│   └── docker-nvidia-install.sh
├── docs/                           # Documentation
│   ├── architecture/
│   ├── guides/
│   └── daily-summaries/
└── tools/                          # Build tools
    ├── kiwi-build.sh
    └── test-iso.sh
```

## Development Workflow

```bash
# 1. Make changes to profile/scripts/home
$EDITOR profiles/leap-15.6/kde-nvidia/config.kiwi.xml

# 2. Build ISO
./tools/kiwi-build.sh profiles/leap-15.6/kde-nvidia

# 3. Test in VM
./tools/test-iso.sh out/geckoforge-*.iso

# 4. Deploy to laptop (if tests pass)
# 5. Deploy to workstation (after 1-2 weeks on laptop)
```

## Testing Strategy

**Phase 1**: VM testing (catch bugs, ~1 day)  
**Phase 2**: Laptop testing (daily driver, 1-2 weeks)  
**Phase 3**: Production workstation (replace Windows 10)

**See**: `50-testing-deployment.mdc` for detailed test procedures

## Community & Support

**Author**: Jay Elliott  
**License**: Apache 2.0  
**Repository**: Personal project, open for forking  
**Support**: Issues for bug reports, no formal support

## Version History

**v0.3.0** (Current):
- Docker replaces Podman
- TeX scheme-medium mandated
- Multi-language dev stack
- Elixir via asdf
- Chromium with extensions

**v0.2.0**: KDE + GPU containers + comprehensive docs  
**v0.1.0**: Initial GNOME + NVIDIA profile

## Notes

- This is a **KIWI image builder**, not a direct system installer
- The 4-layer architecture is **non-negotiable**
- openSUSE Leap 15.6 is the **target OS** - don't suggest other distros
- Stability is prioritized over bleeding-edge features